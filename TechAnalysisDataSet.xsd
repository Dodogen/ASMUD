<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="TechAnalysisDataSet" targetNamespace="http://tempuri.org/TechAnalysisDataSet.xsd" xmlns:mstns="http://tempuri.org/TechAnalysisDataSet.xsd" xmlns="http://tempuri.org/TechAnalysisDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="TechAnalysisConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="TechAnalysisConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.ASMUD.Properties.Settings.GlobalReference.Default.TechAnalysisConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CabinetsTableAdapter" GeneratorDataComponentClassName="CabinetsTableAdapter" Name="Cabinets" UserDataComponentName="CabinetsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TechAnalysisConnectionString (Settings)" DbObjectName="TechAnalysis.dbo.Cabinets" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Cabinets] WHERE (([code] = @Original_code) AND ([departmentCode] = @Original_departmentCode))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_code" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="code" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_departmentCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="departmentCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Cabinets] ([departmentCode]) VALUES (@departmentCode);
SELECT code, departmentCode FROM Cabinets WHERE (code = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@departmentCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="departmentCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT code, departmentCode FROM dbo.Cabinets</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Cabinets] SET [departmentCode] = @departmentCode WHERE (([code] = @Original_code) AND ([departmentCode] = @Original_departmentCode));
SELECT code, departmentCode FROM Cabinets WHERE (code = @code)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@departmentCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="departmentCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_code" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="code" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_departmentCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="departmentCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="code" ColumnName="code" DataSourceName="TechAnalysis.dbo.Cabinets" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@code" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="code" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="code" DataSetColumn="code" />
              <Mapping SourceColumn="departmentCode" DataSetColumn="departmentCode" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ClerksTableAdapter" GeneratorDataComponentClassName="ClerksTableAdapter" Name="Clerks" UserDataComponentName="ClerksTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TechAnalysisConnectionString (Settings)" DbObjectName="TechAnalysis.dbo.Clerks" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Clerks] ([login], [password], [surname], [name], [midName], [email], [departmentCode]) VALUES (@login, @password, @surname, @name, @midName, @email, @departmentCode)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@login" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@password" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@surname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="surname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@midName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="midName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@email" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="email" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@departmentCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="departmentCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT code, login, password, surname, name, midName, email, departmentCode FROM dbo.Clerks</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="code" DataSetColumn="code" />
              <Mapping SourceColumn="login" DataSetColumn="login" />
              <Mapping SourceColumn="password" DataSetColumn="password" />
              <Mapping SourceColumn="surname" DataSetColumn="surname" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="midName" DataSetColumn="midName" />
              <Mapping SourceColumn="email" DataSetColumn="email" />
              <Mapping SourceColumn="departmentCode" DataSetColumn="departmentCode" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DepartmentsTableAdapter" GeneratorDataComponentClassName="DepartmentsTableAdapter" Name="Departments" UserDataComponentName="DepartmentsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TechAnalysisConnectionString (Settings)" DbObjectName="TechAnalysis.dbo.Departments" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Departments] WHERE (([code] = @Original_code) AND ([name] = @Original_name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_code" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="code" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Departments] ([name]) VALUES (@name);
SELECT code, name FROM Departments WHERE (code = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT code, name FROM dbo.Departments</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Departments] SET [name] = @name WHERE (([code] = @Original_code) AND ([name] = @Original_name));
SELECT code, name FROM Departments WHERE (code = @code)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_code" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="code" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="code" ColumnName="code" DataSourceName="TechAnalysis.dbo.Departments" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@code" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="code" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="code" DataSetColumn="code" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DisciplinesTableAdapter" GeneratorDataComponentClassName="DisciplinesTableAdapter" Name="Disciplines" UserDataComponentName="DisciplinesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TechAnalysisConnectionString (Settings)" DbObjectName="TechAnalysis.dbo.Disciplines" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Disciplines] WHERE (([code] = @Original_code) AND ([name] = @Original_name) AND ([departmentCode] = @Original_departmentCode))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_code" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="code" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_departmentCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="departmentCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Disciplines] ([name], [departmentCode]) VALUES (@name, @departmentCode);
SELECT code, name, departmentCode FROM Disciplines WHERE (code = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@departmentCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="departmentCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT code, name, departmentCode FROM dbo.Disciplines</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Disciplines] SET [name] = @name, [departmentCode] = @departmentCode WHERE (([code] = @Original_code) AND ([name] = @Original_name) AND ([departmentCode] = @Original_departmentCode));
SELECT code, name, departmentCode FROM Disciplines WHERE (code = @code)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@departmentCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="departmentCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_code" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="code" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_departmentCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="departmentCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="code" ColumnName="code" DataSourceName="TechAnalysis.dbo.Disciplines" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@code" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="code" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="code" DataSetColumn="code" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="departmentCode" DataSetColumn="departmentCode" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="JournalTableAdapter" GeneratorDataComponentClassName="JournalTableAdapter" Name="Journal" UserDataComponentName="JournalTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TechAnalysisConnectionString (Settings)" DbObjectName="TechAnalysis.dbo.Journal" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Journal] WHERE (([code] = @Original_code) AND ([teacherCode] = @Original_teacherCode) AND ([disciplineCode] = @Original_disciplineCode))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_code" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="code" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_teacherCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="teacherCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_disciplineCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="disciplineCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Journal] ([teacherCode], [disciplineCode]) VALUES (@teacherCode, @disciplineCode);
SELECT code, teacherCode, disciplineCode FROM Journal WHERE (code = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@teacherCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="teacherCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@disciplineCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="disciplineCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT code, teacherCode, disciplineCode FROM dbo.Journal</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Journal] SET [teacherCode] = @teacherCode, [disciplineCode] = @disciplineCode WHERE (([code] = @Original_code) AND ([teacherCode] = @Original_teacherCode) AND ([disciplineCode] = @Original_disciplineCode));
SELECT code, teacherCode, disciplineCode FROM Journal WHERE (code = @code)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@teacherCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="teacherCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@disciplineCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="disciplineCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_code" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="code" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_teacherCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="teacherCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_disciplineCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="disciplineCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="code" ColumnName="code" DataSourceName="TechAnalysis.dbo.Journal" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@code" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="code" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="code" DataSetColumn="code" />
              <Mapping SourceColumn="teacherCode" DataSetColumn="teacherCode" />
              <Mapping SourceColumn="disciplineCode" DataSetColumn="disciplineCode" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TeachersTableAdapter" GeneratorDataComponentClassName="TeachersTableAdapter" Name="Teachers" UserDataComponentName="TeachersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="TechAnalysisConnectionString (Settings)" DbObjectName="TechAnalysis.dbo.Teachers" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Teachers] WHERE (([code] = @Original_code) AND ([surname] = @Original_surname) AND ([name] = @Original_name) AND ((@IsNull_midName = 1 AND [midName] IS NULL) OR ([midName] = @Original_midName)) AND ([departmentCode] = @Original_departmentCode) AND ([lessonsHours] = @Original_lessonsHours) AND ([cabinetCode] = @Original_cabinetCode))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_code" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="code" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_surname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="surname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_midName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="midName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_midName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="midName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_departmentCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="departmentCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_lessonsHours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="lessonsHours" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_cabinetCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="cabinetCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Teachers] ([surname], [name], [midName], [departmentCode], [lessonsHours], [cabinetCode]) VALUES (@surname, @name, @midName, @departmentCode, @lessonsHours, @cabinetCode);
SELECT code, surname, name, midName, departmentCode, lessonsHours, cabinetCode FROM Teachers WHERE (code = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@surname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="surname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@midName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="midName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@departmentCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="departmentCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@lessonsHours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="lessonsHours" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@cabinetCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="cabinetCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT code, surname, name, midName, departmentCode, lessonsHours, cabinetCode FROM dbo.Teachers</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Teachers] SET [surname] = @surname, [name] = @name, [midName] = @midName, [departmentCode] = @departmentCode, [lessonsHours] = @lessonsHours, [cabinetCode] = @cabinetCode WHERE (([code] = @Original_code) AND ([surname] = @Original_surname) AND ([name] = @Original_name) AND ((@IsNull_midName = 1 AND [midName] IS NULL) OR ([midName] = @Original_midName)) AND ([departmentCode] = @Original_departmentCode) AND ([lessonsHours] = @Original_lessonsHours) AND ([cabinetCode] = @Original_cabinetCode));
SELECT code, surname, name, midName, departmentCode, lessonsHours, cabinetCode FROM Teachers WHERE (code = @code)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@surname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="surname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@midName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="midName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@departmentCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="departmentCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@lessonsHours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="lessonsHours" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@cabinetCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="cabinetCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_code" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="code" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_surname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="surname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_midName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="midName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_midName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="midName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_departmentCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="departmentCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_lessonsHours" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="lessonsHours" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_cabinetCode" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="cabinetCode" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="code" ColumnName="code" DataSourceName="TechAnalysis.dbo.Teachers" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@code" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="code" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="code" DataSetColumn="code" />
              <Mapping SourceColumn="surname" DataSetColumn="surname" />
              <Mapping SourceColumn="name" DataSetColumn="name" />
              <Mapping SourceColumn="midName" DataSetColumn="midName" />
              <Mapping SourceColumn="departmentCode" DataSetColumn="departmentCode" />
              <Mapping SourceColumn="lessonsHours" DataSetColumn="lessonsHours" />
              <Mapping SourceColumn="cabinetCode" DataSetColumn="cabinetCode" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="TechAnalysisDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="TechAnalysisDataSet" msprop:Generator_DataSetName="TechAnalysisDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Cabinets" msprop:Generator_RowEvHandlerName="CabinetsRowChangeEventHandler" msprop:Generator_RowDeletedName="CabinetsRowDeleted" msprop:Generator_RowDeletingName="CabinetsRowDeleting" msprop:Generator_RowEvArgName="CabinetsRowChangeEvent" msprop:Generator_TablePropName="Cabinets" msprop:Generator_RowChangedName="CabinetsRowChanged" msprop:Generator_RowChangingName="CabinetsRowChanging" msprop:Generator_TableClassName="CabinetsDataTable" msprop:Generator_RowClassName="CabinetsRow" msprop:Generator_TableVarName="tableCabinets" msprop:Generator_UserTableName="Cabinets">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="code" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="code" msprop:Generator_ColumnPropNameInTable="codeColumn" msprop:Generator_ColumnVarNameInTable="columncode" msprop:Generator_UserColumnName="code" type="xs:int" />
              <xs:element name="departmentCode" msprop:Generator_ColumnPropNameInRow="departmentCode" msprop:Generator_ColumnPropNameInTable="departmentCodeColumn" msprop:Generator_ColumnVarNameInTable="columndepartmentCode" msprop:Generator_UserColumnName="departmentCode" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Clerks" msprop:Generator_RowEvHandlerName="ClerksRowChangeEventHandler" msprop:Generator_RowDeletedName="ClerksRowDeleted" msprop:Generator_RowDeletingName="ClerksRowDeleting" msprop:Generator_RowEvArgName="ClerksRowChangeEvent" msprop:Generator_TablePropName="Clerks" msprop:Generator_RowChangedName="ClerksRowChanged" msprop:Generator_RowChangingName="ClerksRowChanging" msprop:Generator_TableClassName="ClerksDataTable" msprop:Generator_RowClassName="ClerksRow" msprop:Generator_TableVarName="tableClerks" msprop:Generator_UserTableName="Clerks">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="code" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="code" msprop:Generator_ColumnPropNameInTable="codeColumn" msprop:Generator_ColumnVarNameInTable="columncode" msprop:Generator_UserColumnName="code" type="xs:int" />
              <xs:element name="login" msprop:Generator_ColumnPropNameInRow="login" msprop:Generator_ColumnPropNameInTable="loginColumn" msprop:Generator_ColumnVarNameInTable="columnlogin" msprop:Generator_UserColumnName="login">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="32" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="password" msprop:Generator_ColumnPropNameInRow="password" msprop:Generator_ColumnPropNameInTable="passwordColumn" msprop:Generator_ColumnVarNameInTable="columnpassword" msprop:Generator_UserColumnName="password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="32" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="surname" msprop:Generator_ColumnPropNameInRow="surname" msprop:Generator_ColumnPropNameInTable="surnameColumn" msprop:Generator_ColumnVarNameInTable="columnsurname" msprop:Generator_UserColumnName="surname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="64" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="name" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_UserColumnName="name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="64" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="midName" msprop:Generator_ColumnPropNameInRow="midName" msprop:Generator_ColumnPropNameInTable="midNameColumn" msprop:Generator_ColumnVarNameInTable="columnmidName" msprop:Generator_UserColumnName="midName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="64" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="email" msprop:Generator_ColumnPropNameInRow="email" msprop:Generator_ColumnPropNameInTable="emailColumn" msprop:Generator_ColumnVarNameInTable="columnemail" msprop:Generator_UserColumnName="email">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="64" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="departmentCode" msprop:Generator_ColumnPropNameInRow="departmentCode" msprop:Generator_ColumnPropNameInTable="departmentCodeColumn" msprop:Generator_ColumnVarNameInTable="columndepartmentCode" msprop:Generator_UserColumnName="departmentCode" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Departments" msprop:Generator_RowEvHandlerName="DepartmentsRowChangeEventHandler" msprop:Generator_RowDeletedName="DepartmentsRowDeleted" msprop:Generator_RowDeletingName="DepartmentsRowDeleting" msprop:Generator_RowEvArgName="DepartmentsRowChangeEvent" msprop:Generator_TablePropName="Departments" msprop:Generator_RowChangedName="DepartmentsRowChanged" msprop:Generator_RowChangingName="DepartmentsRowChanging" msprop:Generator_TableClassName="DepartmentsDataTable" msprop:Generator_RowClassName="DepartmentsRow" msprop:Generator_TableVarName="tableDepartments" msprop:Generator_UserTableName="Departments">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="code" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="code" msprop:Generator_ColumnPropNameInTable="codeColumn" msprop:Generator_ColumnVarNameInTable="columncode" msprop:Generator_UserColumnName="code" type="xs:int" />
              <xs:element name="name" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_UserColumnName="name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="64" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Disciplines" msprop:Generator_RowEvHandlerName="DisciplinesRowChangeEventHandler" msprop:Generator_RowDeletedName="DisciplinesRowDeleted" msprop:Generator_RowDeletingName="DisciplinesRowDeleting" msprop:Generator_RowEvArgName="DisciplinesRowChangeEvent" msprop:Generator_TablePropName="Disciplines" msprop:Generator_RowChangedName="DisciplinesRowChanged" msprop:Generator_RowChangingName="DisciplinesRowChanging" msprop:Generator_TableClassName="DisciplinesDataTable" msprop:Generator_RowClassName="DisciplinesRow" msprop:Generator_TableVarName="tableDisciplines" msprop:Generator_UserTableName="Disciplines">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="code" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="code" msprop:Generator_ColumnPropNameInTable="codeColumn" msprop:Generator_ColumnVarNameInTable="columncode" msprop:Generator_UserColumnName="code" type="xs:int" />
              <xs:element name="name" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_UserColumnName="name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="64" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="departmentCode" msprop:Generator_ColumnPropNameInRow="departmentCode" msprop:Generator_ColumnPropNameInTable="departmentCodeColumn" msprop:Generator_ColumnVarNameInTable="columndepartmentCode" msprop:Generator_UserColumnName="departmentCode" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Journal" msprop:Generator_RowEvHandlerName="JournalRowChangeEventHandler" msprop:Generator_RowDeletedName="JournalRowDeleted" msprop:Generator_RowDeletingName="JournalRowDeleting" msprop:Generator_RowEvArgName="JournalRowChangeEvent" msprop:Generator_TablePropName="Journal" msprop:Generator_RowChangedName="JournalRowChanged" msprop:Generator_RowChangingName="JournalRowChanging" msprop:Generator_TableClassName="JournalDataTable" msprop:Generator_RowClassName="JournalRow" msprop:Generator_TableVarName="tableJournal" msprop:Generator_UserTableName="Journal">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="code" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="code" msprop:Generator_ColumnPropNameInTable="codeColumn" msprop:Generator_ColumnVarNameInTable="columncode" msprop:Generator_UserColumnName="code" type="xs:int" />
              <xs:element name="teacherCode" msprop:Generator_ColumnPropNameInRow="teacherCode" msprop:Generator_ColumnPropNameInTable="teacherCodeColumn" msprop:Generator_ColumnVarNameInTable="columnteacherCode" msprop:Generator_UserColumnName="teacherCode" type="xs:int" />
              <xs:element name="disciplineCode" msprop:Generator_ColumnPropNameInRow="disciplineCode" msprop:Generator_ColumnPropNameInTable="disciplineCodeColumn" msprop:Generator_ColumnVarNameInTable="columndisciplineCode" msprop:Generator_UserColumnName="disciplineCode" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Teachers" msprop:Generator_RowEvHandlerName="TeachersRowChangeEventHandler" msprop:Generator_RowDeletedName="TeachersRowDeleted" msprop:Generator_RowDeletingName="TeachersRowDeleting" msprop:Generator_RowEvArgName="TeachersRowChangeEvent" msprop:Generator_TablePropName="Teachers" msprop:Generator_RowChangedName="TeachersRowChanged" msprop:Generator_RowChangingName="TeachersRowChanging" msprop:Generator_TableClassName="TeachersDataTable" msprop:Generator_RowClassName="TeachersRow" msprop:Generator_TableVarName="tableTeachers" msprop:Generator_UserTableName="Teachers">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="code" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="code" msprop:Generator_ColumnPropNameInTable="codeColumn" msprop:Generator_ColumnVarNameInTable="columncode" msprop:Generator_UserColumnName="code" type="xs:int" />
              <xs:element name="surname" msprop:Generator_ColumnPropNameInRow="surname" msprop:Generator_ColumnPropNameInTable="surnameColumn" msprop:Generator_ColumnVarNameInTable="columnsurname" msprop:Generator_UserColumnName="surname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="64" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="name" msprop:Generator_ColumnPropNameInRow="name" msprop:Generator_ColumnPropNameInTable="nameColumn" msprop:Generator_ColumnVarNameInTable="columnname" msprop:Generator_UserColumnName="name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="64" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="midName" msprop:Generator_ColumnPropNameInRow="midName" msprop:Generator_ColumnPropNameInTable="midNameColumn" msprop:Generator_ColumnVarNameInTable="columnmidName" msprop:Generator_UserColumnName="midName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="64" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="departmentCode" msprop:Generator_ColumnPropNameInRow="departmentCode" msprop:Generator_ColumnPropNameInTable="departmentCodeColumn" msprop:Generator_ColumnVarNameInTable="columndepartmentCode" msprop:Generator_UserColumnName="departmentCode" type="xs:int" />
              <xs:element name="lessonsHours" msprop:Generator_ColumnPropNameInRow="lessonsHours" msprop:Generator_ColumnPropNameInTable="lessonsHoursColumn" msprop:Generator_ColumnVarNameInTable="columnlessonsHours" msprop:Generator_UserColumnName="lessonsHours" type="xs:int" />
              <xs:element name="cabinetCode" msprop:Generator_ColumnPropNameInRow="cabinetCode" msprop:Generator_ColumnPropNameInTable="cabinetCodeColumn" msprop:Generator_ColumnVarNameInTable="columncabinetCode" msprop:Generator_UserColumnName="cabinetCode" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Cabinets" />
      <xs:field xpath="mstns:code" />
    </xs:unique>
    <xs:unique name="Departments_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Departments" />
      <xs:field xpath="mstns:code" />
    </xs:unique>
    <xs:unique name="Disciplines_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Disciplines" />
      <xs:field xpath="mstns:code" />
    </xs:unique>
    <xs:unique name="Journal_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Journal" />
      <xs:field xpath="mstns:code" />
    </xs:unique>
    <xs:unique name="Teachers_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Teachers" />
      <xs:field xpath="mstns:code" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Journal_Disciplines_disciplineCode" msdata:parent="Disciplines" msdata:child="Journal" msdata:parentkey="code" msdata:childkey="disciplineCode" msprop:Generator_UserParentTable="Disciplines" msprop:Generator_UserChildTable="Journal" msprop:Generator_RelationVarName="relationFK_Journal_Disciplines_disciplineCode" msprop:Generator_ChildPropName="GetJournalRows" msprop:Generator_ParentPropName="DisciplinesRow" msprop:Generator_UserRelationName="FK_Journal_Disciplines_disciplineCode" />
      <msdata:Relationship name="FK_Journal_Teachers_teacherCode" msdata:parent="Teachers" msdata:child="Journal" msdata:parentkey="code" msdata:childkey="teacherCode" msprop:Generator_UserParentTable="Teachers" msprop:Generator_UserChildTable="Journal" msprop:Generator_RelationVarName="relationFK_Journal_Teachers_teacherCode" msprop:Generator_UserRelationName="FK_Journal_Teachers_teacherCode" msprop:Generator_ChildPropName="GetJournalRows" msprop:Generator_ParentPropName="TeachersRow" />
      <msdata:Relationship name="FK_Teachers_Cabinets_cabinetCode" msdata:parent="Cabinets" msdata:child="Teachers" msdata:parentkey="code" msdata:childkey="cabinetCode" msprop:Generator_UserParentTable="Cabinets" msprop:Generator_UserChildTable="Teachers" msprop:Generator_RelationVarName="relationFK_Teachers_Cabinets_cabinetCode" msprop:Generator_ChildPropName="GetTeachersRows" msprop:Generator_ParentPropName="CabinetsRow" msprop:Generator_UserRelationName="FK_Teachers_Cabinets_cabinetCode" />
      <msdata:Relationship name="FK_Teachers_Departments_departmentCode" msdata:parent="Departments" msdata:child="Teachers" msdata:parentkey="code" msdata:childkey="departmentCode" msprop:Generator_UserParentTable="Departments" msprop:Generator_UserChildTable="Teachers" msprop:Generator_RelationVarName="relationFK_Teachers_Departments_departmentCode" msprop:Generator_ChildPropName="GetTeachersRows" msprop:Generator_ParentPropName="DepartmentsRow" msprop:Generator_UserRelationName="FK_Teachers_Departments_departmentCode" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>